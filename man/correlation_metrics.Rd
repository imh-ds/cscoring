% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correlation_metrics.R
\name{correlation_metrics}
\alias{correlation_metrics}
\title{Calculate Correlation-Weighted Composite Score Metrics (Weights & Loadings)}
\usage{
correlation_metrics(data = ., varlist, metric = c("weights", "loadings"))
}
\arguments{
\item{data}{A dataframe object. This should be a structured dataset where
each column represents a variable and each row represents an observation.}

\item{varlist}{A required named list of vectors. Each name in the list
represents a composite variable, and the corresponding vector contains the
column names that are associated with the indicators comprising said
composite variable.}

\item{metric}{The metric (i.e., weights and loadings) to be returned. For
just indicator weights on the composite score, specify as `"weights"`. For
just indicator loadings on the composite score, specify as `"loadings"`.
The default is to return both using `c("weights", "loadings")`.}
}
\value{
A dataframe table with the indicator weights and/or loadings for
their respective composite.
}
\description{
Create composite score weights and loadings of scales by specifying the
indicators that go into each respective composite variable. Refer to the
help documents `?correlation_loadings` and `?correlation_weights` to see how
the loadings and weights are calculated.
}
\examples{

data(grit)

# Specify the named list with composite names and their respective indicators
varlist <- list(extraversion = sprintf("e\%01d", seq(10)),
                neuroticism = sprintf("n\%01d", seq(10)),
                agreeableness = sprintf("a\%01d", seq(10)),
                conscientiousness = sprintf("c\%01d", seq(10)),
                openness = sprintf("o\%01d", seq(10)),
                grit = sprintf("gs\%01d", seq(12)))

# Calculate correlation-weighted composite scores
correlation_metrics <- correlation_metrics(data = grit,
                                           varlist = varlist,
                                           metric = c("weights", "loadings"))

}
